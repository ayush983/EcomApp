plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring Boot Starter Data JPA (for ORM and database interaction)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2 Database (for in-memory testing, remove if using MySQL/PostgreSQL)
    runtimeOnly 'com.h2database:h2'

    // Jakarta Persistence API (JPA) - Required for @Entity, @Table, etc.
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    implementation 'org.springframework.boot:spring-boot-starter-security'  // Spring Security
//    implementation 'org.springframework.boot:spring-boot-starter-validation' // Validation support
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server' // OAuth2 support (optional)




    // Lombok (optional - reduces boilerplate code)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

}

test {
    useJUnitPlatform()
}